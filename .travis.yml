dist: trusty
language: cpp
cache: ccache
addons:
  apt:
    sources:
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    - sourceline: 'ppa:mhier/libboost-latest'
    packages:
    - g++-9
    - gcc-9
    - xorg-dev
    # - libboost-dev
    - libboost1.70-dev
    - freeglut3-dev
    - python3-pip
  homebrew:
    packages:
    - ccache
    - boost
jobs:
  include:
  - os: linux
    dist: "bionic"
    compiler: gcc-9
    env:
    - MATRIX_EVAL="export CC=gcc-9 && CXX=g++-9 && CONFIG=Debug"

  - os: linux
    dist: "bionic"
    compiler: gcc-9
    env:
    - MATRIX_EVAL="export CC=gcc-9 && CXX=g++-9 && CONFIG=Release"

  - os: osx
    osx_image: xcode11.3
    compiler: clang
    env:
    - MATRIX_EVAL="export CONFIG=Debug"

  - os: osx
    osx_image: xcode11.3
    compiler: clang
    env:
    - MATRIX_EVAL="export CONFIG=Release"

before_install:
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  # - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  # - bash miniconda.sh -b -p $HOME/miniconda
  # - source "$HOME/miniconda/etc/profile.d/conda.sh"
  # - conda env create -f environment.yml
  # - conda activate ccd-3.6
  - pip3 install --user -r requirements.txt

install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi
- eval "${MATRIX_EVAL}"
- ccache --max-size=5.0G
- ccache -V && ccache --show-stats && ccache --zero-stats

script:
- mkdir build
- cd build
- cmake -DCMAKE_BUILD_TYPE=$CONFIG ${EXTRA_FLAGS} ..
- make -j2
- if [[ "$CONFIG" == "Release" ]]; then make test; fi
- ccache --show-stats
